# -*- coding: utf-8 -*-
"""salesdash.ipynb

Automatically generated by Colab.

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/Online Sales Data.csv')

df.head()

df.info()

df.isna().values.any()

# Select features and target
X = df[["Units Sold"]].values #feature
y = df["Total Revenue"].values #target

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

from sklearn.metrics import mean_squared_error, r2_score
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)

# Group by Product Name and sum Units Sold
top_products_by_units = df.groupby('Product Name')['Units Sold'].sum().reset_index()

# Sort in descending order to get top products
top_products_by_units = top_products_by_units.sort_values(by='Units Sold', ascending=False)

# Display the top 10 products by units sold
print("Top 10 Products by Units Sold:\n")
print(top_products_by_units.head(10).to_markdown(index=False, numalign="left", stralign="left"))

# Group by Product Name and sum Total Revenue
top_products_by_revenue = df.groupby('Product Name')['Total Revenue'].sum().reset_index()

# Sort in descending order to get top products by revenue
top_products_by_revenue = top_products_by_revenue.sort_values(by='Total Revenue', ascending=False)

# Display the top 10 products by total revenue
print("\nTop 10 Products by Total Revenue:\n")
print(top_products_by_revenue.head(10).to_markdown(index=False, numalign="left", stralign="left"))

import altair as alt
alt.renderers.enable('default')

# Group by Product Category and sum Total Revenue
top_categories_by_revenue = df.groupby('Product Category')['Total Revenue'].sum().reset_index()

# Sort in descending order
top_categories_by_revenue = top_categories_by_revenue.sort_values(by='Total Revenue', ascending=False)

# Display the top product categories by total revenue
print("\nTop Product Categories by Total Revenue:\n")
print(top_categories_by_revenue.to_markdown(index=False, numalign="left", stralign="left"))

# Optional: Visualize top product categories by revenue
chart_categories = alt.Chart(top_categories_by_revenue).mark_bar().encode(
    x=alt.X('Total Revenue', title='Total Revenue', axis=alt.Axis(format='$.2s')),
    y=alt.Y('Product Category', sort='-x', title='Product Category'),
    tooltip=['Product Category', alt.Tooltip('Total Revenue', format='$.2f')]
).properties(
    title='Total Revenue by Product Category',
    width=600,   # adjust width as you like
    height=400   # adjust height as you like
).interactive()

# Display the chart in Colab
chart_categories

df['Date'] = pd.to_datetime(df['Date'])
df_trend = df.groupby(df['Date'].dt.to_period('M'))['Total Revenue'].sum().reset_index()
df_trend['Date'] = df_trend['Date'].dt.to_timestamp()

alt.Chart(df_trend).mark_line(point=True).encode(
    x='Date',
    y='Total Revenue',
    tooltip=['Date', 'Total Revenue']
).properties(
    title='Monthly Revenue Trend',
    width=800,
    height=400
)

df.groupby('Region')['Total Revenue'].sum().sort_values(ascending=False).plot(kind='barh')

alt.Chart(df).mark_circle(size=60).encode(
    x='Units Sold',
    y='Total Revenue',
    color='Product Category',
    tooltip=['Product Name', 'Units Sold', 'Total Revenue']
).properties(
    title='Units Sold vs Total Revenue',
    width=700,
    height=500
).interactive()

df.groupby('Payment Method')['Total Revenue'].sum().plot(kind='pie', autopct='%1.1f%%')

df['Total Revenue'].plot(kind='hist', bins=30)

alt.Chart(df).mark_boxplot().encode(
    x='Product Category',
    y='Total Revenue'
)
